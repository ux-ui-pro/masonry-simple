{"mappings":"AAAA,MAAM;IACa,YAAgC,KAAK;IAC9C,YAA2B,EAAE,CAAC;IAC9B,YAAoB,EAAE;IACtB,SAAiB,EAAE;IACnB,gBAA+B,KAAK;IACpC,eAA+B;IAEvC,YAAY,UAAgD,CAAC,CAAC,CAAE;QAC9D,IAAI,CAAC,SAAS,GACZ,QAAQ,SAAS,YAAY,cACzB,QAAQ,SAAS,GACjB,SAAS,aAAa,CAAC,QAAQ,SAAS,IAAI;QAElD,IAAI,CAAC,cAAc,GAAG,IAAI,eAAe,IAAM,IAAI,CAAC,YAAY;IAClE;IAEQ,eAAe;QACrB,IAAI,IAAI,CAAC,aAAa,KAAK,MACzB,OAAO,oBAAoB,CAAC,IAAI,CAAC,aAAa;QAGhD,IAAI,CAAC,aAAa,GAAG,OAAO,qBAAqB,CAAC,IAAM,IAAI,CAAC,cAAc;IAC7E;IAEQ,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QAErB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG;QAClC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACtB,MAAM,UAAU,KAAK,IAAI,CACvB,AAAC,CAAA,KAAK,YAAY,GAAG,IAAI,CAAC,MAAM,AAAD,IAAM,CAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,AAAD;YAGlE,KAAK,KAAK,CAAC,UAAU,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;QAC3C;IACF;IAEO,OAAO;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QAErB,MAAM,gBAAgB,iBAAiB,IAAI,CAAC,SAAS;QAErD,IAAI,CAAC,MAAM,GAAG,SAAS,cAAc,MAAM,EAAE;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,cAAc,YAAY,EAAE,OAAO,IAAI,CAAC,SAAS;QAE3E,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG;QAC/B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS;QAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAS,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;QAC7D,IAAI,CAAC,cAAc;IACrB;IAEO,UAAU;QACf,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QAErB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS;QAC5C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAS,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;QAE/D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG;QAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG;QAClC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACtB,KAAK,KAAK,CAAC,UAAU,GAAG;QAC1B;IACF;AACF;IAEA,2CAAe","sources":["src/index.ts"],"sourcesContent":["class MasonrySimple {\n  private readonly container: HTMLElement | null = null;\n  private gridItems: HTMLElement[] = [];\n  private rowHeight: number = 1;\n  private rowGap: number = 0;\n  private resizeTimeout: number | null = null;\n  private resizeObserver: ResizeObserver;\n\n  constructor(options: { container?: HTMLElement | string } = {}) {\n    this.container =\n      options.container instanceof HTMLElement\n        ? options.container\n        : document.querySelector(options.container || '.masonry') as HTMLElement;\n\n    this.resizeObserver = new ResizeObserver(() => this.handleResize());\n  }\n\n  private handleResize() {\n    if (this.resizeTimeout !== null) {\n      window.cancelAnimationFrame(this.resizeTimeout);\n    }\n\n    this.resizeTimeout = window.requestAnimationFrame(() => this.resizeAllItems());\n  }\n\n  private resizeAllItems() {\n    if (!this.container) return;\n\n    this.container.style.alignItems = 'start';\n    this.gridItems.forEach((item) => {\n      const rowSpan = Math.ceil(\n        (item.clientHeight + this.rowGap) / (this.rowHeight + this.rowGap)\n      );\n\n      item.style.gridRowEnd = `span ${rowSpan}`;\n    });\n  }\n\n  public init() {\n    if (!this.container) return;\n\n    const computedStyle = getComputedStyle(this.container);\n\n    this.rowGap = parseInt(computedStyle.rowGap, 10);\n    this.rowHeight = parseInt(computedStyle.gridAutoRows, 10) || this.rowHeight;\n\n    this.gridItems = Array.from(this.container.children) as HTMLElement[];\n    this.container.style.contain = 'layout';\n    this.resizeObserver.observe(this.container);\n    this.gridItems.forEach((item) => this.resizeObserver.observe(item));\n    this.resizeAllItems();\n  }\n\n  public destroy() {\n    if (!this.container) return;\n\n    this.resizeObserver.unobserve(this.container);\n    this.gridItems.forEach((item) => this.resizeObserver.unobserve(item));\n\n    this.container.style.contain = '';\n    this.container.style.alignItems = '';\n    this.gridItems.forEach((item) => {\n      item.style.gridRowEnd = '';\n    });\n  }\n}\n\nexport default MasonrySimple;\n"],"names":[],"version":3,"file":"index.module.js.map"}