{"mappings":"AAAA,MAAM;IACJ,CAAC,SAAS,GAAG,KAAK;IAElB,CAAC,SAAS,GAAG,EAAE,CAAC;IAEhB,CAAC,SAAS,GAAG,EAAE;IAEf,CAAC,MAAM,GAAG,EAAE;IAEZ,CAAC,aAAa,GAAG,KAAK;IAEtB,CAAC,cAAc,GAAG,IAAI,eAAe,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG;IAEpE,YAAY,UAAU,CAAC,CAAC,CAAE;QACxB,IAAI,CAAC,CAAC,SAAS,GACb,QAAQ,SAAS,YAAY,cACzB,QAAQ,SAAS,GACjB,SAAS,aAAa,CAAC,QAAQ,SAAS,IAAI;IACpD;IAEA,CAAC,YAAY;QACX,IAAI,IAAI,CAAC,CAAC,aAAa,EACrB,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC,aAAa;QAGjD,IAAI,CAAC,CAAC,aAAa,GAAG,OAAO,qBAAqB,CAAC;YACjD,IAAI,CAAC,CAAC,cAAc;QACtB;IACF;IAEA,CAAC,cAAc;QACb,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG;QACnC,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACvB,MAAM,UAAU,KAAK,IAAI,CACvB,AAAC,CAAA,KAAK,YAAY,GAAG,IAAI,CAAC,CAAC,MAAM,AAAD,IAAM,CAAA,IAAI,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,MAAM,AAAD;YAGrE,KAAK,KAAK,CAAC,UAAU,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;QAC3C;IACF;IAEA,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE;QAEtB,MAAM,UAAE,MAAM,EAAE,GAAG,iBAAiB,IAAI,CAAC,CAAC,SAAS;QAEnD,IAAI,CAAC,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ;QACrD,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG;QAChC,IAAI,CAAC,CAAC,MAAM,GAAG,SAAS,QAAQ;QAChC,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS;QAC5C,IAAI,CAAC,CAAC,cAAc;IACtB;IAEA,UAAU;QACR,IAAI,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS;QAC9C,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG;QAChC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG;QACnC,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACvB,KAAK,KAAK,CAAC,UAAU,GAAG;QAC1B;IACF;AACF;IAEA,2CAAe","sources":["src/index.js"],"sourcesContent":["class MasonrySimple {\n  #container = null;\n\n  #gridItems = [];\n\n  #rowHeight = 1;\n\n  #rowGap = 0;\n\n  #resizeTimeout = null;\n\n  #resizeObserver = new ResizeObserver(this.#handleResize.bind(this));\n\n  constructor(options = {}) {\n    this.#container =\n      options.container instanceof HTMLElement\n        ? options.container\n        : document.querySelector(options.container || '.masonry');\n  }\n\n  #handleResize() {\n    if (this.#resizeTimeout) {\n      window.cancelAnimationFrame(this.#resizeTimeout);\n    }\n\n    this.#resizeTimeout = window.requestAnimationFrame(() => {\n      this.#resizeAllItems();\n    });\n  }\n\n  #resizeAllItems() {\n    this.#container.style.alignItems = 'start';\n    this.#gridItems.forEach((item) => {\n      const rowSpan = Math.ceil(\n        (item.clientHeight + this.#rowGap) / (this.#rowHeight + this.#rowGap)\n      );\n\n      item.style.gridRowEnd = `span ${rowSpan}`;\n    });\n  }\n\n  init() {\n    if (!this.#container) return;\n\n    const { rowGap } = getComputedStyle(this.#container);\n\n    this.#gridItems = Array.from(this.#container.children);\n    this.#container.style.contain = 'layout';\n    this.#rowGap = parseInt(rowGap, 10);\n    this.#resizeObserver.observe(this.#container);\n    this.#resizeAllItems();\n  }\n\n  destroy() {\n    this.#resizeObserver.unobserve(this.#container);\n    this.#container.style.contain = '';\n    this.#container.style.alignItems = '';\n    this.#gridItems.forEach((item) => {\n      item.style.gridRowEnd = '';\n    });\n  }\n}\n\nexport default MasonrySimple;\n"],"names":[],"version":3,"file":"index.module.js.map"}