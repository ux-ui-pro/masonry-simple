{"mappings":";;;;;;;;;;AAAA,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,YAAY,EAAE;QACnB,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,iBAAiB,IAAI,eAAe,IAAI,CAAC,eAAe,KAAK,IAAI;IACxE;IAEA,iBAAiB;QACf,IAAI,CAAC,UAAU,MAAM,aAAa;QAClC,IAAI,CAAC,UAAU,QAAQ,CAAC;YACtB,MAAM,UAAU,KAAK,KACnB,AAAC,CAAA,KAAK,eAAe,IAAI,CAAC,MAAK,IAAM,CAAA,IAAI,CAAC,YAAY,IAAI,CAAC,MAAK;YAGlE,MAAM,UAAU;YAEhB,QAAQ,MAAM,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC;QAC9C;IACF;IAEA,OAAO,KAAK,UAAU,CAAC,CAAC,EAAE;QACxB,MAAM,aAAE,YAAY,YAAY,GAAG;QACnC,MAAM,UAAU,IAAI;QAEpB,QAAQ,YAAY,qBAAqB,cACrC,YACA,SAAS,cAAc;QAE3B,IAAI,CAAC,QAAQ,WAAW;QAExB,QAAQ,YAAY,MAAM,KAAK,QAAQ,UAAU;QACjD,QAAQ,UAAU,MAAM,UAAU;QAElC,QAAQ,SAAS,SAAS,iBAAiB,QAAQ,WAAW,QAAQ;QAEtE,QAAQ,eAAe,QAAQ,QAAQ;QACvC,QAAQ;QAER,OAAO;IACT;IAEA,UAAU;QACR,IAAI,CAAC,eAAe,UAAU,IAAI,CAAC;QAEnC,IAAI,CAAC,UAAU,MAAM,UAAU;QAC/B,IAAI,CAAC,UAAU,MAAM,aAAa;QAClC,IAAI,CAAC,UAAU,QAAQ,CAAC;YACtB,MAAM,UAAU;YAEhB,QAAQ,MAAM,aAAa;QAC7B;IACF;AACF;IAEA,2CAAe","sources":["src/index.js"],"sourcesContent":["class MasonrySimple {\n  constructor() {\n    this.container = null;\n    this.gridItems = [];\n    this.rowHeight = 1;\n    this.rowGap = 0;\n    this.resizeObserver = new ResizeObserver(this.resizeAllItems.bind(this));\n  }\n\n  resizeAllItems() {\n    this.container.style.alignItems = 'start';\n    this.gridItems.forEach((item) => {\n      const rowSpan = Math.ceil(\n        (item.clientHeight + this.rowGap) / (this.rowHeight + this.rowGap),\n      );\n\n      const newItem = item;\n\n      newItem.style.gridRowEnd = `span ${rowSpan}`;\n    });\n  }\n\n  static init(options = {}) {\n    const { container = '.masonry' } = options;\n    const masonry = new MasonrySimple();\n\n    masonry.container = container instanceof HTMLElement\n      ? container\n      : document.querySelector(container);\n\n    if (!masonry.container) return;\n\n    masonry.gridItems = Array.from(masonry.container.children);\n    masonry.container.style.contain = 'layout';\n\n    masonry.rowGap = parseInt(getComputedStyle(masonry.container).rowGap, 10);\n\n    masonry.resizeObserver.observe(masonry.container);\n    masonry.resizeAllItems();\n\n    return masonry;\n  }\n\n  destroy() {\n    this.resizeObserver.unobserve(this.container);\n\n    this.container.style.contain = '';\n    this.container.style.alignItems = '';\n    this.gridItems.forEach((item) => {\n      const newItem = item;\n\n      newItem.style.gridRowEnd = '';\n    });\n  }\n}\n\nexport default MasonrySimple;\n"],"names":[],"version":3,"file":"index.js.map"}